<h1>Overview</h1>

<p>Table-friendly syntax includes supporting tables and views as first-class 
citizens.  </p>

<p>The main collection classes are:</p>
<ul>
	<li><b><a href="Collection-Convergence/Tableish.html">role Tableish</a>:</b> 
		Implements everything common to Tables and Views</li>
	<li><b><a href="Language-Support/Table.html">class Table</a>:</b> A set of 
		named columns and unnamed rows; like an SQL table, but with multiple 
		possible backends</li> 
	<li><b><a href="Language-Support/View.html">class View</a>:</b> Like an SQL 
		view, but local, and an object</li>
</ul>


<h1>Built-in Forms</h1>

<div class="blockquote">
<ul>
<li>The acceptance of the scrolling screens of browsers should hopefully reduce 
the desire to jam as many fields on screen as possible. This will make it easier 
for the ITOP system to generate input screens based on the DD alone. Almost 
everything needed to generate such screens could come from the DD and the 
validation functions. graphic input screen builders should become a thing of the 
past.</li>

<li>Built-in, but optional, sort and search features for data grids. The user 
should be able to double-click on a column heading and chose to sort by or 
search on the field of that column.</li>

<li>Use of checkboxes, icons, etc. as representations of fields should be 
definable in the DD. Perhaps this can be done by having the post-validation 
function return a string with a special code for GUI components. For example, a 
checkbox might be specified with "@gui:checkbox value=on". An icon could be 
represented as such: "@gui:icon file='folder.gif'".</li>

</ul>
<div class="reference">
        <i><a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/top.htm">Table-Oriented Programming</a></i>, Tablizer/TOPMind, 1998-2002
</div>
</div>


<h1>Built-in Reports</h1>

<p/>

<div class="blockquote">

<h2> Related Information and Links </h2>
<ul>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/whypr.htm">Why I prefer procedural/relational over OOP</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/moretop.htm">More on T.O.P.</a> (including stored procedures)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/cntrl1.htm">Control Tables</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/oopbad.htm">OOP Criticism</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/sqlcrit.htm">SQL Criticism</a> (boy, I sure like to criticize)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/merge.htm">Merging TOP and OOP?</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/prpats.htm">Table Patterns</a> (GOF meet TOP)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/array1.htm">Array Criticisms</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/table_qa.htm">Table Q &amp; A</a> 
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/buzzword.htm">Buzz-Words</a> (ITOP and OOP)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/ddsamp.htm">Standard Collection Operations</a> (Collection Bill of Rights)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/ddsamp.htm">More on Data Dictionaries and Table Browsers</a>
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/moretop.htm#setget">How Tables Simplify Interfaces</a> (Avoiding set/get's and other interface bloat)
<li> <a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/newlang.htm">ITOP Language Brainstorming Notes</a>
</ul>

<div class="reference">
        <i><a href="https://web.archive.org/web/20121024051826/http://www.geocities.com/tablizer/top.htm">Table-Oriented Programming</a></i>, Tablizer/TOPMind, 1998-2002
</div>
</div>
