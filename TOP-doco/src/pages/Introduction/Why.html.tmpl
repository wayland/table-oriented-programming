<div class="title">Table-Oriented Programming (TOP)</div>

<div class="tagline">Tim Nelson, 2024</div>

<h1>Why Table-Oriented Programming?</h1>

<p>In short, most programming deals with tables at some point, and the 
approaches most other programming languages take to tables are fairly clunky, 
and this shows a way to improve that.  </p>

<p>Not convinced?  See <a href="Why-Table-Oriented-Programming.html">Why 
Table-Oriented Programming?</a></p>

<h1>Quick History</h1>

<p>Table-Oriented Programming was an as then unnamed paradigm that was popular in 
the 80s and 90s.  Common languages that used it were:</p>

<ul>
	<li>dBase</li>
	<li>Clipper</li>
	<li>Harbour/xHarbour (Open Source)</li>
	<li>Visual FoxPro/Microsoft FoxPro</li>
</ul>

<p>These languages had useful features that are not seen in modern programming 
languages.  </p>

<p>With the advent of the internet, and the popularity of Object-Oriented 
Programming, these languages fell out of use.  </p>

<p>In 1998-2002, as the table-oriented languages were falling out of use, "Findy 
Services and B. Jacobs" wrote a series of articles on "Table-Oriented Programming".  
These were, in their own words, unstructured and piecemeal.  These advocated for various 
features prevalent in these languages, and a few ideas of their own.  </p>

<h1>Comparison of Terminology for Table-Oriented Programming</h1>

<table>
	<tr>
		<th>Raku TOP</th>
		<th>PostgreSQL</th>
		<th>xHarbour</th>
		<th>dBase III</th>
		<th>FoxPro</th>
	</tr>
	<tr>
		<td>Table</td>
		<td>Table</td>
		<td>Database</td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>View</td>
		<td>View + Cursor</td>
		<td>Workspace</td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Driver</td>
		<td></td>
		<td>RDD</td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Schema (hierarchical if desired)</td>
		<td>Schema (flat)</td>
		<td>Filesystem Directory (hierarchical)</td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Database</td>
		<td>Database</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
