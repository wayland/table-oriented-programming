TODO
====

real-sitemap.xml cleanup
------------------------
-	Remove real-sitemap.xml files
-	Adjust the menus to use site-contents
-	Adjust menus to use section names as menu items; either I should write intro articles for each section 
	(probably a good idea), or I should just link to the first article in each section

Content
-------

-	Document Raku classes
	-	Start work
		-	For each class, write a guide for people doing backend classes, telling them not to read the whole thing 
			into memory, because we want to be able to work with really large data

	-	Data Dictionary
		-	Work through http://www.martymodell.com/pgsa2/pgsa08.html and make mine resemble it more
			where useful; also note this link in the doco.  Might even be worth buying the book
			Specifically, look at the diagram part way down, and work with that model
		-	The 7 purposes at https://atlan.com/purpose-of-a-data-dictionary/ should probably be Lots
			-	Turns out that, apart from Governance, they're all just different kinds of doco
		-	Draw fields from:
			https://www.stonybrook.edu/commcms/irpe/about/data_governance/_files/DataDictionaryStandards.pdf
			Typical Attributes section of: https://en.wikipedia.org/wiki/Data_dictionary


#TODO Maybe write an article about why Raku is the perfect programming language for research, because:
#-       Flexible grammar, slangs
#-       Already has many paradigms -- no need to reinvent the wheel


Stuff to write up in the Other Material section (with Zealot-Oriented Programming):
-	Categorisation of Paradigms (the less relevant part at the bottom)
	Possibly Merge also the following:
	-	cf. http://localhost:8000/TOP/Introduction/Paradigm-Placement.xml (not linked from anywhere yet)
	-	./TOP/Comparisons/Paradigm-Comparisons.xml
-	The English Analogy stuff
-	Write up the Kitchen analogy for computers

Also, on the RAD page, include references to Pharo (modern Smalltalk)

Really need to create a programming language for people who understand a dictionary and a kitchen, that:
-	Uses verbs and nouns instead of functions and variables
-	Uses written English as a guide instead of mathematics
-	Distinguishes different kinds of nouns -- Proper nouns are objects, and have a capital letter.  
	classes are lower case, etc, etc
-	Prepositional phrases will feature strongly.  Function parameters are:
	-	Subject/Object
	-	Various prepositions
-	Make the Language Analogy a separate page; pull in the noun-verb priority stuff
-	Pull in material from https://web.archive.org/web/20121102222751/http://www.geocities.com/tablizer/oopbad.htm#isa


Each class (eg. "man") has a context variable associated with it, which is set whenever something of that
class is referenced.  This will be a pain with class hierarchies, but means that whenever someone says 
"the X" (eg. "the man"), then this will reference the context variable.  

Maybe go on with Programming Paradigms book

Interface
---------

-	Then try to make the menus work on mobile -- there might be some ideas at https://freefrontend.com/css-mobile-menus/
	-	Maybe put the previous/next navigation at the top, and the menu icon in the centre


Questions for the Raku people
-----------------------------


Question 1
----------
I'm trying to create a Table class which can be passed a record with values of particular types.  

Is it possible to:
-	Pass a signature to an object on creation
-	Later use that signature to constrain a set of values passed in

My answer: cf. https://stackoverflow.com/questions/73070976/checking-whether-signature-accepts-capture-removes-attribute-values-from-invocan
-	Note that I might be able to use the method in the question, rather than the one in Jonathan's answer
	(because I have different goals than the question asker)

Question 2
----------
How do Sets know whether items are the same or not?  Partial Answer: ACCEPTS does the comparison between sets; not sure about 
comparison between items

ANswer: https://stackoverflow.com/questions/40814933/how-do-the-perl-6-set-operations-compare-elements

Specifically, see also the .WHICH method and https://docs.perl6.org/type/ObjAt


Two-dimensional Programming
---------------------------
-	Table-Oriented Programming
-	Dataflow Programming
-	?UI drawing
-	Office Programming
	-	Spreadsheet = TOP
	-	Writer = Reports, but also coding; we can have styles with meaning




Rococo
------
Raku

Code
Office


CSS Widgets comparison
----------------------

Summary: None of them had as many components as PrimeVue, but it may be that the 
Gutenberg one will be useful for the Print side of things.  

For the Print side of things: https://github.com/BafS/Gutenberg

https://www.lambdatest.com/blog/best-css-frameworks/ says there are 5 different kinds of frameworks.  The kinds
that caught my eye are:
-	Component-based: Bootstrap, Primer, Halfmoon
-	Modular: UIKit

It may end up that Mdash ( https://m-docs.org/ ) ends up being the least bad option


